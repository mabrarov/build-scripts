--- ./runConfigureICU	2019-02-13 21:00:00 +0300
+++ ./runConfigureICU	2019-02-13 21:10:00 +0300
@@ -28,6 +28,7 @@
 Options: -h, --help         Print this message and exit
          --enable-debug     Enable support for debugging
          --disable-release  Disable presetting optimization flags
+         --static-runtime   Use a statically linked C/C++ runtime (Cygwin/MSVC only)
 
 If you want to add custom CFLAGS or CXXFLAGS or similar, provide them _before_
 the runConfigureICU command:
@@ -72,6 +73,7 @@
 platform=
 debug=0
 release=1
+static_runtime=0
 
 while test $# -ne 0
 do
@@ -87,6 +89,9 @@
         release=0
         OPTS="$OPTS --disable-release"
         ;;
+    --static-runtime)
+        static_runtime=1
+        ;;
     *)
         platform="$1"
         shift
@@ -212,18 +217,18 @@
         THE_OS="Linux"
         CC=`which icc`; export CC
         CXX=`which icpc`; export CXX
-	ICC_VER=`${CC} -v 2>&1`
+    ICC_VER=`${CC} -v 2>&1`
         RELEASE_CFLAGS='-O'
         RELEASE_CXXFLAGS='-O'
         export CFLAGS="-fp-model precise"
         export CXXFLAGS="-fp-model precise"
-	if [ "${ICC_VER}" = "Version 9.0 " ]; then
-		RELEASE_CFLAGS=''
-		RELEASE_CXXFLAGS=''
-		export CFLAGS="${CFLAGS} -O0"
-		export CXXFLAGS="${CXXFLAGS} -O0"
-		echo "ICC 9.0 does not work with optimization- disabling optimizations"
-	fi
+    if [ "${ICC_VER}" = "Version 9.0 " ]; then
+        RELEASE_CFLAGS=''
+        RELEASE_CXXFLAGS=''
+        export CFLAGS="${CFLAGS} -O0"
+        export CXXFLAGS="${CXXFLAGS} -O0"
+        echo "ICC 9.0 does not work with optimization- disabling optimizations"
+    fi
         THE_COMP="Intel ${ICC_VER}"
         ;;
     Linux/VA)
@@ -259,15 +264,21 @@
         RELEASE_CXXFLAGS='-O3'
         ;;
     Cygwin/MSVC)
+        if [ "${static_runtime}" = "0" ]; then
+            RUNTIME_LINKER_OPTION='MD'
+        else
+            RUNTIME_LINKER_OPTION='MT'
+        fi
+        RUNTIME_LINKER_FLAG='/'${RUNTIME_LINKER_OPTION}
         THE_OS="Windows with Cygwin"
         THE_COMP="Microsoft Visual C++"
         CC=cl; export CC
         CXX=cl; export CXX
-        RELEASE_CFLAGS='-Gy -MD'
-        RELEASE_CXXFLAGS='-Gy -MD'
-        DEBUG_CFLAGS='-Zi -MDd'
-        DEBUG_CXXFLAGS='-Zi -MDd'
-        DEBUG_LDFLAGS='-DEBUG'
+        RELEASE_CFLAGS='/Gy '${RUNTIME_LINKER_FLAG}
+        RELEASE_CXXFLAGS='/Gy '${RUNTIME_LINKER_FLAG}
+        DEBUG_CFLAGS='/Zi '${RUNTIME_LINKER_FLAG}d'
+        DEBUG_CXXFLAGS='/Zi '${RUNTIME_LINKER_FLAG}d'
+        DEBUG_LDFLAGS='/DEBUG'
         ;;
     Cygwin/MSVC2005)
         THE_OS="Windows with Cygwin"
@@ -313,22 +324,33 @@
     MinGW)
         THE_OS="MinGW"
         THE_COMP="the GNU C++"
+        if [ "${static_runtime}" = "0" ]; then
+            RUNTIME_LINKER_FLAGS=''
+        else
+            RUNTIME_LINKER_FLAGS='-static -static-libgcc -static-libstdc++'
+        fi
         RELEASE_CFLAGS='-O3'
         RELEASE_CXXFLAGS='-O3'
         CXXFLAGS="--std=c++03"
+        LDFLAGS="${RUNTIME_LINKER_FLAGS}"
         export CXXFLAGS
+        export LDFLAGS
         ;;
     MSYS/MSVC)
         THE_OS="MSYS"
         THE_COMP="Microsoft Visual C++"
         CC=cl; export CC
         CXX=cl; export CXX
-        RELEASE_CFLAGS='-Gy -MD'
-        RELEASE_CXXFLAGS='-Gy -MD'
-        DEBUG_CFLAGS='-Zi -MDd'
-        DEBUG_CXXFLAGS='-Zi -MDd'
-        DEBUG_LDFLAGS='-DEBUG'
-        ;;
+        if [ "${static_runtime}" = "0" ]; then
+            RUNTIME_LINKER_OPTION='MD'
+        else
+            RUNTIME_LINKER_OPTION='MT'
+        fi
+        RUNTIME_LINKER_FLAG='-'${RUNTIME_LINKER_OPTION}
+        RELEASE_CFLAGS='-Gy '${RUNTIME_LINKER_FLAG}
+        RELEASE_CXXFLAGS='-Gy '${RUNTIME_LINKER_FLAG}
+        DEBUG_CFLAGS=${RUNTIME_LINKER_FLAG}d
+        DEBUG_CXXFLAGS=${RUNTIME_LINKER_FLAG}d        ;;
     *BSD)
         THE_OS="BSD"
         THE_COMP="the GNU C++"
@@ -435,11 +457,11 @@
 echo
 if $configure $OPTS $@
 then
-	echo
-	echo If the result of the above commands looks okay to you, go to the directory
-	echo source in the ICU distribution to build ICU. Please remember that ICU needs
-	echo GNU make to build properly...
+    echo
+    echo If the result of the above commands looks okay to you, go to the directory
+    echo source in the ICU distribution to build ICU. Please remember that ICU needs
+    echo GNU make to build properly...
 else
-	echo $0: ./configure failed
-	exit 1
-fi
+    echo $0: ./configure failed
+    exit 1
+fi
\ No newline at end of file

--- ./common/unicode/ptypes.h	2016-06-15 21:58:17.567338000 +0300
+++ ./common/unicode/ptypes.h	2016-12-21 15:20:27.893161500 +0200
@@ -123,6 +123,28 @@
 #endif
 #endif

+#if defined(_MSC_VER) && _MSC_VER==1500
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include <limits.h>
+
+#define INT8_MIN     ((int8_t)_I8_MIN)
+#define INT8_MAX     _I8_MAX
+#define INT16_MIN    ((int16_t)_I16_MIN)
+#define INT16_MAX    _I16_MAX
+#define INT32_MIN    ((int32_t)_I32_MIN)
+#define INT32_MAX    _I32_MAX
+#define INT64_MIN    ((int64_t)_I64_MIN)
+#define INT64_MAX    _I64_MAX
+#define UINT8_MAX    _UI8_MAX
+#define UINT16_MAX   _UI16_MAX
+#define UINT32_MAX   _UI32_MAX
+#define UINT64_MAX   _UI64_MAX
+#endif
+
 #endif /* U_HAVE_STDINT_H / U_HAVE_INTTYPES_H */

 #endif /* _PTYPES_H */

--- ./test/cintltst/spooftest.c	2016-09-21 00:06:55.670090000 +0300
+++ ./test/cintltst/spooftest.c	2016-12-21 15:20:27.898161500 +0200
@@ -469,16 +469,20 @@
      * uspoof_check2 variants
      */
     TEST_SETUP
-        int32_t result1, result2;
+        int32_t i, result1, result2;
         char utf8buf[200];
+		USpoofCheckResult* checkResult;
+		const UChar* tests[] = { goodLatin, scMixed, scLatin,
+                goodCyrl, goodGreek, lll_Latin_a, lll_Latin_b, han_Hiragana };
+
+		URestrictionLevel restrictionLevel;
+
         uspoof_setChecks(sc, USPOOF_ALL_CHECKS | USPOOF_AUX_INFO, &status);
-        USpoofCheckResult* checkResult = uspoof_openCheckResult(&status);
+		checkResult = uspoof_openCheckResult(&status);
+
         TEST_ASSERT_SUCCESS(status);

-        const UChar* tests[] = { goodLatin, scMixed, scLatin,
-                goodCyrl, goodGreek, lll_Latin_a, lll_Latin_b, han_Hiragana };
-
-        for (int32_t i=0; i<UPRV_LENGTHOF(tests); i++) {
+        for (i=0; i<UPRV_LENGTHOF(tests); i++) {
             const UChar* str = tests[i];

             // Basic test
@@ -497,7 +501,7 @@
             TEST_ASSERT_EQ(result1 & USPOOF_ALL_CHECKS, uspoof_getCheckResultChecks(checkResult, &status));

             // Restriction level from checkResult should be same as that from bitmask
-            URestrictionLevel restrictionLevel = uspoof_getCheckResultRestrictionLevel(checkResult, &status);
+            restrictionLevel = uspoof_getCheckResultRestrictionLevel(checkResult, &status);
             TEST_ASSERT_EQ(result1 & restrictionLevel, restrictionLevel);

             // UTF8 endpoint

--- ./config/mh-mingw	2019-02-13 21:00:00 +0300
+++ ./config/mh-mingw	2019-02-13 21:10:00 +0300
@@ -72,7 +72,7 @@
 A = a

 ## An import library is needed for z/OS and MSVC
-IMPORT_LIB_EXT = .dll.a
+IMPORT_LIB_EXT = .a

 LIBPREFIX=lib

--- ./config/mh-mingw64	2019-02-13 21:00:00 +0300
+++ ./config/mh-mingw64	2019-02-13 21:10:00 +0300
@@ -72,7 +72,7 @@
 A = a

 ## An import library is needed for z/OS and MSVC
-IMPORT_LIB_EXT = .dll.a
+IMPORT_LIB_EXT = .a

 LIBPREFIX=

