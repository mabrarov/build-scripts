--- ./runConfigureICU	2025-03-13 21:31:23.000000000 +0300
+++ ./runConfigureICU	2025-04-12 14:26:24.871787900 +0300
@@ -28,6 +28,7 @@
 Options: -h, --help         Print this message and exit
          --enable-debug     Enable support for debugging
          --disable-release  Disable presetting optimization flags
+         --static-runtime   Use a statically linked C/C++ runtime (Cygwin/MSVC only)
 
 If you want to add custom CFLAGS or CXXFLAGS or similar, provide them _before_
 the runConfigureICU command:
@@ -73,6 +74,7 @@
 platform=
 debug=0
 release=1
+static_runtime=0
 
 while test $# -ne 0
 do
@@ -88,6 +90,9 @@
         release=0
         OPTS="$OPTS --disable-release"
         ;;
+    --static-runtime)
+        static_runtime=1
+        ;;
     *)
         platform="$1"
         shift
@@ -288,11 +293,17 @@
         THE_COMP="Microsoft Visual C++"
         CC=cl; export CC
         CXX=cl; export CXX
-        RELEASE_CFLAGS='-Gy -MD'
-        RELEASE_CXXFLAGS='-Gy -MD'
-        DEBUG_CFLAGS='-FS -Zi -MDd'
-        DEBUG_CXXFLAGS='-FS -Zi -MDd'
-        DEBUG_LDFLAGS='-DEBUG'
+        if [ "${static_runtime}" = "0" ]; then
+            RUNTIME_LINKER_OPTION='MD'
+        else
+            RUNTIME_LINKER_OPTION='MT'
+        fi
+        RUNTIME_LINKER_FLAG='/'${RUNTIME_LINKER_OPTION}
+        RELEASE_CFLAGS='/Gy '${RUNTIME_LINKER_FLAG}
+        RELEASE_CXXFLAGS='/std:c++17 /Gy '${RUNTIME_LINKER_FLAG}
+        DEBUG_CFLAGS='/Zi '${RUNTIME_LINKER_FLAG}d
+        DEBUG_CXXFLAGS='/std:c++17 /Zi '${RUNTIME_LINKER_FLAG}d
+        DEBUG_LDFLAGS='/DEBUG'
         ;;
     Cygwin/MSVC2005)
         THE_OS="Windows with Cygwin"
@@ -338,19 +349,32 @@
     MinGW)
         THE_OS="MinGW"
         THE_COMP="the GNU C++"
+        if [ "${static_runtime}" = "0" ]; then
+            RUNTIME_LINKER_FLAGS=''
+        else
+            RUNTIME_LINKER_FLAGS='-static -static-libgcc -static-libstdc++'
+        fi
         RELEASE_CFLAGS='-O3'
         RELEASE_CXXFLAGS='-O3'
+        LDFLAGS="${RUNTIME_LINKER_FLAGS}"
         export CXXFLAGS
+        export LDFLAGS
         ;;
     MSYS/MSVC)
         THE_OS="MSYS"
         THE_COMP="Microsoft Visual C++"
         CC=cl; export CC
         CXX=cl; export CXX
-        RELEASE_CFLAGS='-Gy -MD'
-        RELEASE_CXXFLAGS='-Gy -MD'
-        DEBUG_CFLAGS='-FS -Zi -MDd'
-        DEBUG_CXXFLAGS='-FS -Zi -MDd'
+        if [ "${static_runtime}" = "0" ]; then
+            RUNTIME_LINKER_OPTION='MD'
+        else
+            RUNTIME_LINKER_OPTION='MT'
+        fi
+        RUNTIME_LINKER_FLAG='-'${RUNTIME_LINKER_OPTION}
+        RELEASE_CFLAGS='-Gy '${RUNTIME_LINKER_FLAG}
+        RELEASE_CXXFLAGS='-std:c++17 -Gy '${RUNTIME_LINKER_FLAG}
+        DEBUG_CFLAGS='-Zi '${RUNTIME_LINKER_FLAG}d
+        DEBUG_CXXFLAGS='-std:c++17 -Zi '${RUNTIME_LINKER_FLAG}d
         DEBUG_LDFLAGS='-DEBUG'
         ;;
     *BSD)
--- ./config/mh-mingw	2025-03-13 21:31:23.000000000 +0300
+++ ./config/mh-mingw	2025-04-08 14:21:58.153890000 +0300
@@ -86,7 +86,7 @@
 A = a
 
 ## An import library is needed for z/OS and MSVC
-IMPORT_LIB_EXT = .dll.a
+IMPORT_LIB_EXT = .a
 
 LIBPREFIX=lib
 
--- ./config/mh-mingw64	2025-03-13 21:31:23.000000000 +0300
+++ ./config/mh-mingw64	2025-04-08 14:21:48.864750500 +0300
@@ -86,7 +86,7 @@
 A = a
 
 ## An import library is needed for z/OS and MSVC
-IMPORT_LIB_EXT = .dll.a
+IMPORT_LIB_EXT = .a
 
 LIBPREFIX=
 
--- ./extra/scrptrun/Makefile.in	2025-03-13 21:31:23.000000000 +0300
+++ ./extra/scrptrun/Makefile.in	2025-05-05 01:40:41.288945600 +0300
@@ -22,7 +22,7 @@
 TARGET = srtest$(EXEEXT)
 
 DEFS = @DEFS@
-CPPFLAGS = @CPPFLAGS@ -I$(top_srcdir)/common -I$(top_srcdir) 
+CPPFLAGS += -I$(top_srcdir)/common -I$(top_srcdir)
 CFLAGS = @CFLAGS@
 CXXFLAGS = @CXXFLAGS@
 ENABLE_RPATH = @ENABLE_RPATH@
--- ./config/mh-msys-msvc	2025-03-13 21:31:23.000000000 +0300
+++ ./config/mh-msys-msvc	2025-05-05 02:54:13.502970900 +0300
@@ -5,6 +5,11 @@
 ## Copyright (c) 2014, International Business Machines Corporation and
 ## others. All Rights Reserved.
 
+# On Windows we generally have the DLLs in the bin directory rather than the lib directory.
+# This setting moves the ICU DLLs into the bin folder for MinGW/MSYS2 when "make install" is run.
+# If you prefer to have the DLLs in the lib folder, then set this to NO instead.
+MINGW_MOVEDLLSTOBINDIR = YES
+
 # We install sbin tools into the same bin directory because
 # pkgdata needs some of the tools in sbin, and we can't always depend on
 # icu-config working on Windows.
